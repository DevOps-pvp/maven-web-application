node
{
    def mavenver = tool name: "Maven V3.8.5"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])

    echo "The branch name is: ${env.BRANCH_NAME}"
    echo "The build number is: ${env.BUILD_NUMBER}"
    echo "The build id is: ${env.BUILD_ID}"
    echo "The job name is: ${env.JOB_NAME}"

    try{
        stage('CheckoutCode'){
        git branch: 'development', credentialsId: '1f554e08-c1a6-4154-a352-be4158aa1bcf', 
        url: 'https://github.com/DevOps-pvp/maven-web-application.git'    
        }//stage-Git

        stage('MavenBuild'){
        sh "${mavenver}/bin/mvn clean package"
        }//MavenBuild
    /*
        stage('ExecuteSonarQubeReport'){
        sh "${mavenver}/bin/mvn sonar:sonar"
        }//ExecuteSonarQubeReport

        stage ('UploadArtifactsIntoNexus'){
        sh "${mavenver}/bin/mvn deploy"
        }//UploadArtifactsIntoNexus

        stage ('DeployToTomcat'){
        sshagent(['tomcatSsh']) {
        sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.36.91:/opt/tomcat/webapps/"
        }//sshagent
        }//DeployToTomcat
    */
    }//try block

    catch (e) {
        // If there was an exception thrown, the build failed
        currentBuild.result = "FAILURE"
        throw e
    } //catch
   
    finally {
        // Success or failure, always send notifications
        notifyBuild(currentBuild.result)
    }//finally

}//node

def buildnotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
